function tle(WHICH_LOOP_TIC)
%TLE    Timed Loop End.
%   TLE(WHICH_LOOP_TIC) prints the caller name and line and the total time
%   elapsed executing the loop with timing index WHICH_LOOP_TIC.
%   WHICH_LOOP_TIC must be generated by calling TLS. TLE also removes
%   WHICH_LOOP_TIC from the timing table, disabling its further usage. 
% 
%   Usage:
%     WHICH_LOOP_TIC = TLS;
%     for k = 1:N
%         % k-th iteration computation
%         TLP(k/N,WHICH_LOOP_TIC);
%     end
%     TLE(WHICH_LOOP_TIC);
% 
%   See also TLS, TLP, TIC, TOC.

%   Vicente Parot 2008-2011

global LOOP_TIC
global LOOP_BKSP
global LOOP_LAST_COUNT

if nargin>0
    pos = find(LOOP_TIC==WHICH_LOOP_TIC);
    if numel(pos)<1
        warning 'nonexistent TOC'
        return
    end
        compl = 1;
        [a,dum] = dbstack();
        if length(a)<2 
            caller_name_line = '?';
        else
            caller_name_line = [a(2).name ', ' num2str(a(2).line)];
        end
        str = [caller_name_line ': ' num2str(floor(compl*100)/1) '% complete' 13 ...
            'elapsed time: ' datestr(datenum([0 0 0 0 0 toc(LOOP_TIC(pos)) ...
            ]),'dd, HH:MM:SS\n')];
        fprintf('%s',['' 8*ones(1,LOOP_BKSP(pos)) str]);
        drawnow;
        LOOP_BKSP(pos) = numel(str);
        LOOP_LAST_COUNT(pos) = toc(LOOP_TIC(pos));
    if pos>1
        LOOP_BKSP(pos-1) = LOOP_BKSP(pos-1) + LOOP_BKSP(pos);
    end
    newset = setdiff(1:numel(LOOP_TIC),pos);
    LOOP_TIC = LOOP_TIC(newset);
	LOOP_BKSP = LOOP_BKSP(newset);
	LOOP_LAST_COUNT = LOOP_LAST_COUNT(newset);
end